// <auto-generated />
using FinalProject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace FinalProject.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20191108192722_firstly")]
    partial class firstly
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("FinalProject.Models.Customers", b =>
                {
                    b.Property<int>("Customer_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Desc");

                    b.Property<int>("Role_id");

                    b.Property<int>("User_id");

                    b.Property<string>("Work_name");

                    b.HasKey("Customer_id");

                    b.HasIndex("Role_id");

                    b.HasIndex("User_id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("FinalProject.Models.Designers", b =>
                {
                    b.Property<int>("Designer_id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Role_id");

                    b.Property<string>("Skills");

                    b.Property<string>("Softs");

                    b.Property<int>("User_id");

                    b.HasKey("Designer_id");

                    b.HasIndex("Role_id");

                    b.HasIndex("User_id");

                    b.ToTable("Designers");
                });

            modelBuilder.Entity("FinalProject.Models.Orders", b =>
                {
                    b.Property<int>("Order_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Desc");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("State_id");

                    b.Property<int>("User_id");

                    b.HasKey("Order_id");

                    b.HasIndex("State_id");

                    b.HasIndex("User_id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("FinalProject.Models.Orders_Designers", b =>
                {
                    b.Property<int>("Designer_id");

                    b.Property<int>("Order_id");

                    b.HasKey("Designer_id", "Order_id");

                    b.HasIndex("Order_id");

                    b.ToTable("Orders_Designers");
                });

            modelBuilder.Entity("FinalProject.Models.Requests", b =>
                {
                    b.Property<int>("Request_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Desc");

                    b.Property<string>("Name");

                    b.Property<int>("Price");

                    b.Property<int>("State_id");

                    b.Property<int>("User_id");

                    b.HasKey("Request_id");

                    b.HasIndex("State_id");

                    b.HasIndex("User_id");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("FinalProject.Models.Requests_Customers", b =>
                {
                    b.Property<int>("Customers_id");

                    b.Property<int>("Request_id");

                    b.HasKey("Customers_id", "Request_id");

                    b.HasIndex("Request_id");

                    b.ToTable("Requests_Customers");
                });

            modelBuilder.Entity("FinalProject.Models.Role", b =>
                {
                    b.Property<int>("Role_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Role_id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("FinalProject.Models.States", b =>
                {
                    b.Property<int>("State_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("State_id");

                    b.ToTable("States");
                });

            modelBuilder.Entity("FinalProject.Models.Users", b =>
                {
                    b.Property<int>("User_id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Full_name");

                    b.Property<string>("Password");

                    b.Property<int>("Role_id");

                    b.Property<string>("Username");

                    b.HasKey("User_id");

                    b.HasIndex("Role_id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FinalProject.Models.Customers", b =>
                {
                    b.HasOne("FinalProject.Models.Role", "Role")
                        .WithMany("Customers")
                        .HasForeignKey("Role_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinalProject.Models.Users", "User")
                        .WithMany("Customers")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProject.Models.Designers", b =>
                {
                    b.HasOne("FinalProject.Models.Role", "Role")
                        .WithMany("Designers")
                        .HasForeignKey("Role_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinalProject.Models.Users", "User")
                        .WithMany("Designers")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProject.Models.Orders", b =>
                {
                    b.HasOne("FinalProject.Models.States", "State")
                        .WithMany("Orders")
                        .HasForeignKey("State_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinalProject.Models.Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProject.Models.Orders_Designers", b =>
                {
                    b.HasOne("FinalProject.Models.Designers", "Designer")
                        .WithMany("Orders_Designers")
                        .HasForeignKey("Designer_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinalProject.Models.Orders", "Order")
                        .WithMany("Orders_Designers")
                        .HasForeignKey("Order_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProject.Models.Requests", b =>
                {
                    b.HasOne("FinalProject.Models.States", "State")
                        .WithMany("Request")
                        .HasForeignKey("State_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinalProject.Models.Users", "User")
                        .WithMany("Requests")
                        .HasForeignKey("User_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProject.Models.Requests_Customers", b =>
                {
                    b.HasOne("FinalProject.Models.Customers", "Customer")
                        .WithMany("Requests_Customers")
                        .HasForeignKey("Customers_id")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FinalProject.Models.Requests", "Request")
                        .WithMany("Requests_Customers")
                        .HasForeignKey("Request_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FinalProject.Models.Users", b =>
                {
                    b.HasOne("FinalProject.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("Role_id")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
